package v1

import (
	"Etpmls-Admin1-Server/controller/api/common"
	"Etpmls-Admin1-Server/library"
	"Etpmls-Admin1-Server/model"
	"github.com/gin-gonic/gin"
	"net/http"
)

func MenuGetAll(c *gin.Context)  {

	tree := model.MenuGetAllV1()
	common.ReturnJsonSuccess(c, http.StatusOK, 20000, nil, tree)
	return
}

func MenuCreate(c *gin.Context)  {
	//Bind Data
	var j model.JsonMenuCreateV1
	if c.ShouldBindJSON(&j) != nil {
		common.ReturnJsonError(c, http.StatusBadRequest, 00000,"参数不完整！", nil)
		return
	}

	// Validate Json
	err := library.ValidateZh(j)
	if err != nil {
		common.ReturnJsonError(c, http.StatusForbidden, 0, err.Error(), nil)
		return
	}

	id, err := model.MenuCreateV1(j)

	//Return Success
	common.ReturnJsonSuccess(c, http.StatusOK, 20000, "菜单添加成功", gin.H{"id": id})
}

func MenuDelete(c *gin.Context)  {
	var u model.UriMenuDeleteV1
	if c.ShouldBindUri(&u) != nil{
		common.ReturnJsonError(c, http.StatusBadRequest, 0, "提交参数不完整！", nil)
		return
	}

	// Validate Form
	err := library.ValidateZh(u)
	if err != nil {
		common.ReturnJsonError(c, http.StatusForbidden, 0, "不能删除管理员！", nil)
		return
	}

	// Delete Menu
	if model.MenuDeleteV1(u) != nil {
		common.ReturnJsonError(c, http.StatusBadRequest, 0, "删除失败！", nil)
		return
	}

	// Return Message
	common.ReturnJsonSuccess(c, http.StatusOK, 20000, nil, nil)
	return
}

func MenuEdit(c *gin.Context)  {
	var j model.JsonMenuEditV1

	// Bind data
	if c.ShouldBindJSON(&j) != nil {
		common.ReturnJsonError(c, http.StatusBadRequest, 0, "提交信息不完整！", nil)
		return
	}

	// Validate Json
	err := library.ValidateZh(j)
	if err != nil {
		common.ReturnJsonError(c, http.StatusForbidden, 0, err.Error(), nil)
		return
	}

	// Update Menu
	id, err := model.MenuEditV1(j)
	if err != nil {
		common.ReturnJsonError(c, http.StatusBadRequest, 0, "创建菜单失败！", nil)
		return
	}

	//Return Message
	common.ReturnJsonSuccess(c, http.StatusOK, 20000, "创建菜单成功！", gin.H{"id": id})
	return
}


