package v1

import (
	"Etpmls-Admin1-Server/controller/api/common"
	"Etpmls-Admin1-Server/library"
	"Etpmls-Admin1-Server/model"
	"github.com/gin-gonic/gin"
	"net/http"
)

func AttachmentImageUpload(c *gin.Context)  {
	file, err := c.FormFile("file")
	if err != nil {
		common.ReturnJsonError(c, http.StatusBadRequest, 0,"获取文件失败！",nil)
		return
	}

	extension, err := model.AttachmentValidateImageV1(file)
	if err != nil {
		common.ReturnJsonError(c, http.StatusBadRequest, 0,"图片验证失败！",nil)
		return
	}

	path, err := model.AttachmentImageUploadV1(c, file, extension)
	if err != nil {
		common.ReturnJsonError(c, http.StatusBadRequest, 0, err.Error(),nil)
		return
	}

	common.ReturnJsonSuccess(c, http.StatusOK, 20000,"图片上传成功！",gin.H{"path": path})
	return
}

func AttachmentImageDelete(c *gin.Context)  {
	var j model.JsonAttachmentImageDeleteV1
	if c.ShouldBindJSON(&j) != nil{
		common.ReturnJsonError(c, http.StatusBadRequest, 0, "提交参数不完整！", nil)
		return
	}

	// Validate Form
	err := library.ValidateZh(j)
	if err != nil {
		common.ReturnJsonError(c, http.StatusForbidden, 0, err.Error(), nil)
		return
	}
	// Validate Path
	err = model.AttachmentValidatePathV1(j.Path)
	if err != nil {
		common.ReturnJsonError(c, http.StatusForbidden, 0, err.Error(), nil)
	}

	// Delete Menu
	if err = model.AttachmentImageDeleteV1(j); err != nil {
		common.ReturnJsonError(c, http.StatusBadRequest, 0, err.Error(), nil)
		return
	}

	common.ReturnJsonSuccess(c, http.StatusOK, 20000,"图片删除成功！", nil)
	return
}