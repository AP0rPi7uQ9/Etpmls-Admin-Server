package model

import (
	"Etpmls-Admin1-Server/database"
	"github.com/jinzhu/gorm"
)

func RoleGetAllV1() []JsonRoleGetAllV1 {
	var role []Role
	database.DB.Preload("Menus").Find(&role)

	var j []JsonRoleGetAllV1
	var tmp JsonRoleGetAllV1
	for _, v := range role {
		tmp.ID = v.ID
		tmp.Name = v.Name
		tmp.Description = v.Description

		// tmp.Menus
		var m []Menu
		for _, v2 := range v.Menus {
			m = append(m, v2)
		}
		tree := MenuGetTreeByMenusV1(m)
		tmp.Menus = tree

		j = append(j ,tmp)
	}

	return j
}

func RoleCreateV1(j JsonRoleCreateV1) (id uint, err error) {
	var form Role
	form.Name = j.Name
	form.Description = j.Description
	// Get All Children With Self
	var list []JsonMenuGetAllV1
	MenuGetChildrenByMenuV1(0, j.Menus, &list)


	var tmp []Menu
	for _, v := range list {
		tmp = append(tmp, Menu{ID: v.ID})
	}


	// Insert Data
	if err := database.DB.Create(&form).Association("Menus").Replace(tmp).Error; err != nil {
		return id, err
	}

	return form.ID, err
}

func RoleEditV1(j JsonRoleEditV1) (err error) {
	// Edit Role format
	var form Role
	database.DB.First(&form, j.ID)

	form.Name = j.Name
	form.Description = j.Description
	var list []JsonMenuGetAllV1
	MenuGetChildrenByMenuV1(0, j.Menus, &list)

	var tmp []Menu
	for _, v := range list {
		tmp = append(tmp, Menu{ID: v.ID})
	}

	if err = database.DB.Save(&form).Association("Menus").Replace(&tmp).Error; err != nil {
		return err
	}

	return err
}

func RoleDeleteV1(u UriRoleDeleteV1) (err error) {
	var role Role
	role.ID = u.ID
	err = database.DB.Transaction(func(tx *gorm.DB) error {
		if err := tx.Delete(&role).Error; err != nil {
			return err
		}
		if err := tx.Model(&role).Association("Menus").Clear().Error; err != nil {
			return err
		}
		if err := tx.Model(&role).Association("Users").Clear().Error; err != nil {
			return err
		}
		return nil
	})

	return err
}
