package model

import (
	"time"
)

type User struct {
	ID        uint `json:"id"`
	CreatedAt time.Time	`json:"created_at"`
	UpdatedAt time.Time	`json:"updated_at"`
	DeletedAt *time.Time `json:"deleted_at"`
	Username string `json:"username"`
	Password string `json:"password"`
	Roles []Role `gorm:"many2many:role_users" json:"roles"`
}

type Role struct {
	ID        uint `json:"id"`
	CreatedAt time.Time `json:"created_at"`
	UpdatedAt time.Time `json:"updated_at"`
	DeletedAt *time.Time `json:"deleted_at"`
	Name string `json:"name"`
	Description string `json:"description"`
	Menus []Menu `gorm:"many2many:role_menus" json:"menus"`
	Users []User `gorm:"many2many:role_users" json:"users"`
}

type Menu struct {
	ID        uint `json:"id"`
	CreatedAt time.Time	`json:"created_at"`
	UpdatedAt time.Time	`json:"updated_at"`
	DeletedAt *time.Time `json:"deleted_at"`
	ParentId uint `json:"parent_id"`
	Hidden bool `json:"hidden"`
	Redirect string `json:"redirect"`
	AlwaysShow bool `json:"always_show"`
	Name string `json:"name"`
	Title string `json:"title"`
	Icon string `json:"icon"`
	NoCache bool `json:"no_cache"`
	Affix bool `json:"affix"`
	Breadcrumb bool `json:"breadcrumb"`
	ActiveMenu string `json:"active_menu"`
	Path string	`json:"path"`
	Component string 	`json:"component"`
	Roles []Role  `gorm:"many2many:role_menus" json:"roles"`
}

type Attachment struct {
	ID        uint `json:"id"`
	CreatedAt time.Time `json:"created_at"`
	UpdatedAt time.Time `json:"updated_at"`
	DeletedAt *time.Time `json:"deleted_at"`
	Path string	`json:"path"`
	OwnerID uint	`json:"owner_id"`
	OwnerType string	`json:"owner_type"`
}

type JsonUserGetAllV1 struct {
	ID        uint `json:"id"`
	CreatedAt time.Time	`json:"created_at"`
	UpdatedAt time.Time	`json:"updated_at"`
	DeletedAt *time.Time `json:"deleted_at"`
	Username string `json:"username"`
	Password string `json:"-"`
	Roles []Role `gorm:"many2many:role_users" json:"roles"`
}

type JsonUserGetOneV1 struct {
	ID        uint `json:"-"`
	CreatedAt time.Time	`json:"-"`
	UpdatedAt time.Time	`json:"-"`
	DeletedAt *time.Time `json:"-"`
	Introduction string `json:"introduction"`
	Avatar string `json:"avatar"`
	Roles []string `json:"roles"`
}

type JsonUserRegisterV1 struct {
	ID        uint `json:"-"`
	CreatedAt time.Time	`json:"-"`
	UpdatedAt time.Time	`json:"-"`
	DeletedAt *time.Time `json:"-"`
	Username string `binding:"required" json:"username" validate:"max=255"`
	Password string `binding:"required" json:"password" validate:"max=255"`
	Roles []Role `json:"roles"`
}

type JsonUserLoginV1 struct{
	ID        uint `json:"-"`
	CreatedAt time.Time	`json:"-"`
	UpdatedAt time.Time	`json:"-"`
	DeletedAt *time.Time `json:"-"`
	Username string `binding:"required" json:"username" validate:"max=255"`
	Password string `binding:"required" json:"password" validate:"max=255"`
	CaptchaId string `binding:"required" json:"captcha_id"`
	Captcha string `binding:"required" json:"captcha"`
}

type JsonUserCreateV1 struct {
	ID        uint `json:"-"`
	CreatedAt time.Time	`json:"-"`
	UpdatedAt time.Time	`json:"-"`
	DeletedAt *time.Time `json:"-"`
	Username string `binding:"required" json:"username" validate:"required,max=20"`
	Password string `binding:"required" json:"password" validate:"required,max=30"`
	Roles []struct{
		ID uint `binding:"required" json:"id"`
	} `binding:"required" json:"roles"`
}

type JsonUserEditV1 struct{
	ID uint `json:"id" binding:"required"`
	CreatedAt time.Time	`json:"-"`
	UpdatedAt time.Time	`json:"-"`
	DeletedAt *time.Time `json:"-"`
	Username string `json:"username" binding:"required" validate:"required"`
	Password string `json:"password" validate:"max=30"`
	Roles []struct{
		ID        uint `json:"id" binding:"required"`
		Name string `json:"name" binding:"required"`
		Description string `json:"description"`
		Menus []Menu `json:"routes"`
	}	`json:"roles" binding:"required"`
}

type UriUserDeleteV1 struct {
	ID uint `uri:"id" binding:"required" validate:"ne=1"`
	CreatedAt time.Time	`uri:"-"`
	UpdatedAt time.Time	`uri:"-"`
	DeletedAt *time.Time `uri:"-"`
}

type JsonRoleGetAllV1 struct {
	ID uint `json:"key"`
	CreatedAt time.Time	`json:"-"`
	UpdatedAt time.Time	`json:"-"`
	DeletedAt *time.Time `json:"-"`
	Name string	`json:"name"`
	Description string `json:"description"`
	Menus []JsonMenuGetAllV1 `json:"routes"`
}

type JsonRoleCreateV1 struct {
	ID        uint `json:"-"`
	CreatedAt time.Time `json:"-"`
	UpdatedAt time.Time `json:"-"`
	DeletedAt *time.Time `json:"-"`
	Name string `json:"name" binding:"required" validate:"max=30"`
	Description string `json:"description"`
	Menus []JsonMenuGetAllV1 `json:"routes" binding:"required"`
}

type JsonRoleEditV1 struct {
	ID uint `json:"key" binding:"required" validate:"required"`
	CreatedAt time.Time `json:"-"`
	UpdatedAt time.Time `json:"-"`
	DeletedAt *time.Time `json:"-"`
	Name string `json:"name" binding:"required" validate:"required,max=30"`
	Description string	`json:"description"`
	Menus []JsonMenuGetAllV1 `json:"routes" binding:"required"`
}

type UriRoleDeleteV1 struct {
	ID uint `uri:"id" binding:"required"`
	CreatedAt time.Time `uri:"-"`
	UpdatedAt time.Time `uri:"-"`
	DeletedAt *time.Time `uri:"-"`
}

type JsonMenuGetAllV1 struct {
	ID uint `json:"id,omitempty"`
	CreatedAt time.Time `json:"-"`
	UpdatedAt time.Time `json:"-"`
	DeletedAt *time.Time `json:"-"`
	ParentId uint `json:"parent_id"`
	Path string `json:"path,omitempty"`
	Component string `json:"component,omitempty"`
	Name string `json:"name,omitempty"`
	AlwaysShow bool `json:"always_show"`
	Redirect string `json:"redirect,omitempty"`
	Hidden bool `json:"hidden"`
	Meta struct {
		Roles []string `json:"roles"`
		Title string `json:"title,omitempty"`
		Icon string `json:"icon,omitempty"`
		NoCache bool `json:"noCache,omitempty"`
		Affix bool `json:"affix,omitempty"`
		BreadCrumb bool `json:"breadcrumb,omitempty"`
		ActiveMenu string `json:"activeMenu,omitempty"`
	} `json:"meta,omitempty"`
	Children []JsonMenuGetAllV1 `json:"children,omitempty"`
}

type JsonMenuCreateV1 struct {
	ID        uint `json:"id"`
	CreatedAt time.Time	`json:"-"`
	UpdatedAt time.Time	`json:"-"`
	DeletedAt *time.Time `json:"-"`
	ParentId uint `json:"parent_id" validate:"min=0,max=99999999999"`
	Hidden bool `json:"hidden"`
	Redirect string `json:"redirect" validate:"min=0,max=100"`
	AlwaysShow bool `json:"always_show"`
	Name string `json:"name" binding:"required" validate:"min=0,max=30"`
	Meta struct{
		Title string `json:"title" binding:"required"`
		Icon string `json:"icon"`
	} `json:"meta"`
	Path string `json:"path" binding:"required"`
	Component string `json:"component" binding:"required"`
	// Tmp Field
	Title string	`json:"-"`
	Icon string		`json:"-"`
}

type UriMenuDeleteV1 struct {
	ID uint `uri:"id" binding:"required" validate:"min=1"`
	CreatedAt time.Time `uri:"-"`
	UpdatedAt time.Time `uri:"-"`
	DeletedAt *time.Time `uri:"-"`
	Roles []Role  `gorm:"many2many:role_menus" json:"-"`
}

type JsonMenuEditV1 struct {
	ID        uint `json:"id" binding:"required"`
	CreatedAt time.Time	`json:"-"`
	UpdatedAt time.Time	`json:"-"`
	DeletedAt *time.Time `json:"-"`
	ParentId uint `json:"parent_id" validate:"min=0,max=99999999999"`
	Hidden bool `json:"hidden"`
	Redirect string `json:"redirect" validate:"min=0,max=100"`
	AlwaysShow bool `json:"always_show"`
	Name string `json:"name" binding:"required" validate:"min=0,max=30"`
	Meta struct{
		Title string `json:"title" binding:"required"`
		Icon string `json:"icon"`
	} `json:"meta"`
	Path string `json:"path" binding:"required"`
	Component string `json:"component" binding:"required"`
	// Tmp Field
	Title string	`json:"-"`
	Icon string		`json:"-"`
}

type JsonAttachmentImageDeleteV1 struct {
	ID uint `json:"-"`
	CreatedAt time.Time `json:"-"`
	UpdatedAt time.Time `json:"-"`
	DeletedAt *time.Time `json:"-"`
	Path string	`json:"path" binding:"required"`
}

